{
  "name": "@pooltogether/foundry-template",
  "version": "1.0.0",
  "description": "Template to kickstart a Foundry project",
  "author": {
    "name": "PoolTogether Inc.",
    "url": "https://github.com/pooltogether"
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/pooltogether/foundry-template.git"
  },
  "scripts": {
    "clean": "forge clean",
    "compile": "forge compile",
    "coverage": "forge coverage --report lcov && lcov --extract lcov.info -o lcov.info 'src/*' && genhtml lcov.info -o coverage",
    "----------LOCAL-DEPLOYMENT-SCRIPTS----------": "",
    "deploy:pool:local": "forge script script/deploy/DeployPool.s.sol:DeployPool --code-size-limit $LOCAL_CODE_SIZE_LIMIT_BYTES --rpc-url http://localhost:8545 --private-key $LOCAL_PRIVATE_KEY --sender $LOCAL_SENDER --broadcast",
    "deploy:stable-token:local": "forge script script/deploy/DeployStableToken.s.sol:DeployStableToken --code-size-limit $LOCAL_CODE_SIZE_LIMIT_BYTES --rpc-url http://localhost:8545 --private-key $LOCAL_PRIVATE_KEY --sender $LOCAL_SENDER --broadcast",
    "deploy:token:local": "forge script script/deploy/DeployToken.s.sol:DeployToken --code-size-limit $LOCAL_CODE_SIZE_LIMIT_BYTES --rpc-url http://localhost:8545 --private-key $LOCAL_PRIVATE_KEY --sender $LOCAL_SENDER --broadcast",
    "deploy:set-token-price:local": "forge script script/deploy/SetTokenPrice.s.sol:SetTokenPrice --code-size-limit $LOCAL_CODE_SIZE_LIMIT_BYTES --rpc-url http://localhost:8545 --private-key $LOCAL_PRIVATE_KEY --sender $LOCAL_SENDER --broadcast",
    "deploy:set-stable-token-role:local": "forge script script/deploy/SetStableTokenRole.s.sol:SetStableTokenRole --code-size-limit $LOCAL_CODE_SIZE_LIMIT_BYTES --rpc-url http://localhost:8545 --private-key $LOCAL_PRIVATE_KEY --sender $LOCAL_SENDER --broadcast",
    "deploy:set-token-role:local": "forge script script/deploy/SetTokenRole.s.sol:SetTokenRole --code-size-limit $LOCAL_CODE_SIZE_LIMIT_BYTES --rpc-url http://localhost:8545 --private-key $LOCAL_PRIVATE_KEY --sender $LOCAL_SENDER --broadcast",
    "deploy:yield-vault:local": "forge script script/deploy/DeployYieldVault.s.sol:DeployYieldVault --code-size-limit $LOCAL_CODE_SIZE_LIMIT_BYTES --rpc-url http://localhost:8545 --private-key $LOCAL_PRIVATE_KEY --sender $LOCAL_SENDER --broadcast",
    "deploy:set-vault-role:local": "forge script script/deploy/SetVaultRole.s.sol:SetVaultRole --code-size-limit $LOCAL_CODE_SIZE_LIMIT_BYTES --rpc-url http://localhost:8545 --private-key $LOCAL_PRIVATE_KEY --sender $LOCAL_SENDER --broadcast",
    "deploy:set-yield-vault-role:local": "forge script script/deploy/SetYieldVaultRole.s.sol:SetYieldVaultRole --code-size-limit $LOCAL_CODE_SIZE_LIMIT_BYTES --rpc-url http://localhost:8545 --private-key $LOCAL_PRIVATE_KEY --sender $LOCAL_SENDER --broadcast",
    "deploy:vault:local": "forge script script/deploy/DeployVault.s.sol:DeployVault --code-size-limit $LOCAL_CODE_SIZE_LIMIT_BYTES --rpc-url http://localhost:8545 --private-key $LOCAL_PRIVATE_KEY --sender $LOCAL_SENDER --broadcast",
    "deploy:twab-delegator:local": "forge script script/deploy/DeployTwabDelegator.s.sol:DeployTwabDelegator --code-size-limit $LOCAL_CODE_SIZE_LIMIT_BYTES --rpc-url http://localhost:8545 --private-key $LOCAL_PRIVATE_KEY --sender $LOCAL_SENDER --broadcast",
    "deploy:contracts:local": "npm run deploy:stable-token:local && npm run deploy:token:local && npm run deploy:pool:local && npm run deploy:yield-vault:local && npm run deploy:vault:local && npm run deploy:twab-delegator:local",
    "deploy:config-contracts:local": "npm run deploy:set-token-price:local && npm run deploy:set-stable-token-role:local && npm run deploy:set-token-role:local && npm run deploy:set-vault-role:local && npm run deploy:set-yield-vault-role:local",
    "----------OPTIMISM-GOERLI-DEPLOYMENT-SCRIPTS----------": "",
    "deploy:pool:optimismGoerli": "forge script script/deploy/DeployL2PrizePool.s.sol:DeployL2PrizePool --rpc-url $OPTIMISM_GOERLI_RPC_URL --sender $SENDER --private-key $PRIVATE_KEY --broadcast --verify --etherscan-api-key $OPTIMISM_ETHERSCAN_API_KEY -vvvv",
    "deploy:stable-token:optimismGoerli": "forge script script/deploy/DeployStableToken.s.sol:DeployStableToken --rpc-url $OPTIMISM_GOERLI_RPC_URL --sender $SENDER --private-key $PRIVATE_KEY --broadcast --verify --etherscan-api-key $OPTIMISM_ETHERSCAN_API_KEY",
    "deploy:token:optimismGoerli": "forge script script/deploy/DeployToken.s.sol:DeployToken --rpc-url $OPTIMISM_GOERLI_RPC_URL --sender $SENDER --private-key $PRIVATE_KEY --broadcast --verify --etherscan-api-key $OPTIMISM_ETHERSCAN_API_KEY",
    "deploy:set-token-price:optimismGoerli": "forge script script/deploy/SetTokenPrice.s.sol:SetTokenPrice --rpc-url $OPTIMISM_GOERLI_RPC_URL --sender $SENDER --private-key $PRIVATE_KEY --broadcast --verify --etherscan-api-key $OPTIMISM_ETHERSCAN_API_KEY",
    "deploy:set-stable-token-role:optimismGoerli": "forge script script/deploy/SetStableTokenRole.s.sol:SetStableTokenRole --rpc-url $OPTIMISM_GOERLI_RPC_URL --sender $SENDER --private-key $PRIVATE_KEY --broadcast --verify --etherscan-api-key $OPTIMISM_ETHERSCAN_API_KEY",
    "deploy:set-token-role:optimismGoerli": "forge script script/deploy/SetTokenRole.s.sol:SetTokenRole --rpc-url $OPTIMISM_GOERLI_RPC_URL --sender $SENDER --private-key $PRIVATE_KEY --broadcast --verify --etherscan-api-key $OPTIMISM_ETHERSCAN_API_KEY",
    "deploy:yield-vault:optimismGoerli": "forge script script/deploy/DeployYieldVault.s.sol:DeployYieldVault --rpc-url $OPTIMISM_GOERLI_RPC_URL --sender $SENDER --private-key $PRIVATE_KEY --broadcast --verify --etherscan-api-key $OPTIMISM_ETHERSCAN_API_KEY",
    "deploy:set-vault-role:optimismGoerli": "forge script script/deploy/SetVaultRole.s.sol:SetVaultRole --rpc-url $OPTIMISM_GOERLI_RPC_URL --sender $SENDER --private-key $PRIVATE_KEY --broadcast --verify --etherscan-api-key $OPTIMISM_ETHERSCAN_API_KEY -vvvv",
    "deploy:set-yield-vault-role:optimismGoerli": "forge script script/deploy/SetYieldVaultRole.s.sol:SetYieldVaultRole --rpc-url $OPTIMISM_GOERLI_RPC_URL --sender $SENDER --private-key $PRIVATE_KEY --broadcast --verify --etherscan-api-key $OPTIMISM_ETHERSCAN_API_KEY",
    "deploy:vault:optimismGoerli": "forge script script/deploy/DeployVault.s.sol:DeployVault --rpc-url $OPTIMISM_GOERLI_RPC_URL --sender $SENDER --private-key $PRIVATE_KEY --broadcast --verify --etherscan-api-key $OPTIMISM_ETHERSCAN_API_KEY -vvv",
    "deploy:twab-delegator:optimismGoerli": "forge script script/deploy/DeployTwabDelegator.s.sol:DeployTwabDelegator --rpc-url $OPTIMISM_GOERLI_RPC_URL --sender $SENDER --private-key $PRIVATE_KEY --broadcast --verify --etherscan-api-key $OPTIMISM_ETHERSCAN_API_KEY -vvv",
    "deploy:contracts:optimismGoerli": "npm run deploy:stable-token:optimismGoerli && npm run deploy:token:optimismGoerli && npm run deploy:pool:optimismGoerli && npm run deploy:yield-vault:optimismGoerli && npm run deploy:vault:optimismGoerli && npm run deploy:twab-delegator:optimismGoerli",
    "deploy:config-contracts:optimismGoerli": "npm run deploy:set-token-price:optimismGoerli && npm run deploy:set-stable-token-role:optimismGoerli && npm run deploy:set-token-role:optimismGoerli && npm run deploy:set-vault-role:optimismGoerli && npm run deploy:set-yield-vault-role:optimismGoerli",
    "----------ETH-GOERLI-DEPLOYMENT-SCRIPTS----------": "",
    "deploy:l1:rng-auction:goerli": "forge script script/deploy/DeployL1RngAuction.s.sol:DeployL1RngAuction --rpc-url $GOERLI_RPC_URL  --sender $SENDER --private-key $PRIVATE_KEY --broadcast --verify --etherscan-api-key $ETHERSCAN_API_KEY",
    "deploy:pool:ethGoerli": "forge script script/deploy/DeployPool.s.sol:DeployPool --rpc-url $GOERLI_RPC_URL --sender $SENDER --private-key $PRIVATE_KEY --broadcast --verify --etherscan-api-key $ETHERSCAN_API_KEY",
    "deploy:stable-token:ethGoerli": "forge script script/deploy/DeployStableToken.s.sol:DeployStableToken --rpc-url $GOERLI_RPC_URL --sender $SENDER --private-key $PRIVATE_KEY --broadcast --verify --etherscan-api-key $ETHERSCAN_API_KEY",
    "deploy:token:ethGoerli": "forge script script/deploy/DeployToken.s.sol:DeployToken --rpc-url $GOERLI_RPC_URL --sender $SENDER --private-key $PRIVATE_KEY --broadcast --verify --etherscan-api-key $ETHERSCAN_API_KEY",
    "deploy:set-token-price:ethGoerli": "forge script script/deploy/SetTokenPrice.s.sol:SetTokenPrice --rpc-url $GOERLI_RPC_URL --sender $SENDER --private-key $PRIVATE_KEY --broadcast --verify --etherscan-api-key $ETHERSCAN_API_KEY",
    "deploy:set-stable-token-role:ethGoerli": "forge script script/deploy/SetStableTokenRole.s.sol:SetStableTokenRole --rpc-url $GOERLI_RPC_URL --sender $SENDER --private-key $PRIVATE_KEY --broadcast --verify --etherscan-api-key $ETHERSCAN_API_KEY",
    "deploy:set-token-role:ethGoerli": "forge script script/deploy/SetTokenRole.s.sol:SetTokenRole --rpc-url $GOERLI_RPC_URL --sender $SENDER --private-key $PRIVATE_KEY --broadcast --verify --etherscan-api-key $ETHERSCAN_API_KEY",
    "deploy:yield-vault:ethGoerli": "forge script script/deploy/DeployYieldVault.s.sol:DeployYieldVault --rpc-url $GOERLI_RPC_URL --sender $SENDER --private-key $PRIVATE_KEY --broadcast --verify --etherscan-api-key $ETHERSCAN_API_KEY",
    "deploy:set-vault-role:ethGoerli": "forge script script/deploy/SetVaultRole.s.sol:SetVaultRole --rpc-url $GOERLI_RPC_URL --sender $SENDER --private-key $PRIVATE_KEY --broadcast --verify --etherscan-api-key $ETHERSCAN_API_KEY",
    "deploy:set-yield-vault-role:ethGoerli": "forge script script/deploy/SetYieldVaultRole.s.sol:SetYieldVaultRole --rpc-url $GOERLI_RPC_URL --sender $SENDER --private-key $PRIVATE_KEY --broadcast --verify --etherscan-api-key $ETHERSCAN_API_KEY",
    "deploy:vault:ethGoerli": "forge script script/deploy/DeployVault.s.sol:DeployVault --rpc-url $GOERLI_RPC_URL --sender $SENDER --private-key $PRIVATE_KEY --broadcast --verify --etherscan-api-key $ETHERSCAN_API_KEY",
    "deploy:twab-delegator:ethGoerli": "forge script script/deploy/DeployTwabDelegator.s.sol:DeployTwabDelegator --rpc-url $GOERLI_RPC_URL --sender $SENDER --private-key $PRIVATE_KEY --broadcast --verify --etherscan-api-key $ETHERSCAN_API_KEY",
    "deploy:contracts:ethGoerli": "npm run deploy:stable-token:ethGoerli && npm run deploy:token:ethGoerli && npm run deploy:pool:ethGoerli && npm run deploy:yield-vault:ethGoerli && npm run deploy:vault:ethGoerli && npm run deploy:twab-delegator:ethGoerli",
    "deploy:config-contracts:ethGoerli": "npm run deploy:set-token-price:ethGoerli && npm run deploy:set-stable-token-role:ethGoerli && npm run deploy:set-token-role:ethGoerli && npm run deploy:set-vault-role:ethGoerli && npm run deploy:set-yield-vault-role:ethGoerli",
    "----------ETH-SEPOLIA-DEPLOYMENT-SCRIPTS----------": "",
    "deploy:pool:ethSepolia": "forge script script/deploy/DeployPool.s.sol:DeployPool --via-ir --rpc-url $SEPOLIA_RPC_URL --sender $SENDER --private-key $PRIVATE_KEY --broadcast --etherscan-api-key $ETHERSCAN_API_KEY",
    "deploy:stable-token:ethSepolia": "forge script script/deploy/DeployStableToken.s.sol:DeployStableToken --via-ir --rpc-url $SEPOLIA_RPC_URL --sender $SENDER --private-key $PRIVATE_KEY --broadcast --etherscan-api-key $ETHERSCAN_API_KEY",
    "deploy:token:ethSepolia": "forge script script/deploy/DeployToken.s.sol:DeployToken --via-ir --rpc-url $SEPOLIA_RPC_URL --sender $SENDER --private-key $PRIVATE_KEY --broadcast --etherscan-api-key $ETHERSCAN_API_KEY",
    "deploy:set-token-price:ethSepolia": "forge script script/deploy/SetTokenPrice.s.sol:SetTokenPrice --via-ir --rpc-url $SEPOLIA_RPC_URL --sender $SENDER --private-key $PRIVATE_KEY --broadcast --etherscan-api-key $ETHERSCAN_API_KEY",
    "deploy:set-stable-token-role:ethSepolia": "forge script script/deploy/SetStableTokenRole.s.sol:SetStableTokenRole --via-ir --rpc-url $SEPOLIA_RPC_URL --sender $SENDER --private-key $PRIVATE_KEY --broadcast --etherscan-api-key $ETHERSCAN_API_KEY",
    "deploy:set-token-role:ethSepolia": "forge script script/deploy/SetTokenRole.s.sol:SetTokenRole --via-ir --rpc-url $SEPOLIA_RPC_URL --sender $SENDER --private-key $PRIVATE_KEY --broadcast --etherscan-api-key $ETHERSCAN_API_KEY",
    "deploy:yield-vault:ethSepolia": "forge script script/deploy/DeployYieldVault.s.sol:DeployYieldVault --via-ir --rpc-url $SEPOLIA_RPC_URL --sender $SENDER --private-key $PRIVATE_KEY --broadcast --etherscan-api-key $ETHERSCAN_API_KEY",
    "deploy:set-vault-role:ethSepolia": "forge script script/deploy/SetVaultRole.s.sol:SetVaultRole --via-ir --rpc-url $SEPOLIA_RPC_URL --sender $SENDER --private-key $PRIVATE_KEY --broadcast --etherscan-api-key $ETHERSCAN_API_KEY",
    "deploy:set-yield-vault-role:ethSepolia": "forge script script/deploy/SetYieldVaultRole.s.sol:SetYieldVaultRole --via-ir --rpc-url $SEPOLIA_RPC_URL --sender $SENDER --private-key $PRIVATE_KEY --broadcast --etherscan-api-key $ETHERSCAN_API_KEY",
    "deploy:vault:ethSepolia": "forge script script/deploy/DeployVault.s.sol:DeployVault --via-ir --rpc-url $SEPOLIA_RPC_URL --sender $SENDER --private-key $PRIVATE_KEY --broadcast --etherscan-api-key $ETHERSCAN_API_KEY",
    "deploy:twab-delegator:ethSepolia": "forge script script/deploy/DeployTwabDelegator.s.sol:DeployTwabDelegator --via-ir --rpc-url $SEPOLIA_RPC_URL --sender $SENDER --private-key $PRIVATE_KEY --broadcast --etherscan-api-key $ETHERSCAN_API_KEY",
    "deploy:contracts:ethSepolia": "npm run deploy:stable-token:ethSepolia && npm run deploy:token:ethSepolia && npm run deploy:pool:ethSepolia && npm run deploy:yield-vault:ethSepolia && npm run deploy:vault:ethSepolia && npm run deploy:twab-delegator:ethSepolia",
    "deploy:config-contracts:ethSepolia": "npm run deploy:set-token-price:ethSepolia && npm run deploy:set-stable-token-role:ethSepolia && npm run deploy:set-token-role:ethSepolia && npm run deploy:set-vault-role:ethSepolia && npm run deploy:set-yield-vault-role:ethSepolia",
    "----------MUMBAI-DEPLOYMENT-SCRIPTS----------": "",
    "deploy:pool:mumbai": "forge script script/deploy/DeployPool.s.sol:DeployPool --rpc-url $POLYGON_MUMBAI_RPC_URL --sender $SENDER --broadcast --verify --etherscan-api-key $POLYGONSCAN_API_KEY",
    "deploy:stable-token:mumbai": "forge script script/deploy/DeployStableToken.s.sol:DeployStableToken --rpc-url $POLYGON_MUMBAI_RPC_URL --sender $SENDER --broadcast --verify --etherscan-api-key $POLYGONSCAN_API_KEY",
    "deploy:token:mumbai": "forge script script/deploy/DeployToken.s.sol:DeployToken --rpc-url $POLYGON_MUMBAI_RPC_URL --sender $SENDER --broadcast --verify --etherscan-api-key $POLYGONSCAN_API_KEY",
    "deploy:set-token-price:mumbai": "forge script script/deploy/SetTokenPrice.s.sol:SetTokenPrice --rpc-url $POLYGON_MUMBAI_RPC_URL --sender $SENDER --broadcast --verify --etherscan-api-key $POLYGONSCAN_API_KEY",
    "deploy:set-stable-token-role:mumbai": "forge script script/deploy/SetStableTokenRole.s.sol:SetStableTokenRole --rpc-url $POLYGON_MUMBAI_RPC_URL --sender $SENDER --broadcast --verify --etherscan-api-key $POLYGONSCAN_API_KEY",
    "deploy:set-token-role:mumbai": "forge script script/deploy/SetTokenRole.s.sol:SetTokenRole --rpc-url $POLYGON_MUMBAI_RPC_URL --sender $SENDER --broadcast --verify --etherscan-api-key $POLYGONSCAN_API_KEY",
    "deploy:yield-vault:mumbai": "forge script script/deploy/DeployYieldVault.s.sol:DeployYieldVault --rpc-url $POLYGON_MUMBAI_RPC_URL --sender $SENDER --broadcast --verify --etherscan-api-key $POLYGONSCAN_API_KEY",
    "deploy:set-vault-role:mumbai": "forge script script/deploy/SetVaultRole.s.sol:SetVaultRole --rpc-url $POLYGON_MUMBAI_RPC_URL --sender $SENDER --broadcast --verify --etherscan-api-key $POLYGONSCAN_API_KEY",
    "deploy:set-yield-vault-role:mumbai": "forge script script/deploy/SetYieldVaultRole.s.sol:SetYieldVaultRole --rpc-url $POLYGON_MUMBAI_RPC_URL --sender $SENDER --broadcast --verify --etherscan-api-key $POLYGONSCAN_API_KEY",
    "deploy:vault:mumbai": "forge script script/deploy/DeployVault.s.sol:DeployVault --rpc-url $POLYGON_MUMBAI_RPC_URL --sender $SENDER --broadcast --verify --etherscan-api-key $POLYGONSCAN_API_KEY",
    "deploy:twab-delegator:mumbai": "forge script script/deploy/DeployTwabDelegator.s.sol:DeployTwabDelegator --rpc-url $POLYGON_MUMBAI_RPC_URL --sender $SENDER --broadcast --verify --etherscan-api-key $POLYGONSCAN_API_KEY",
    "deploy:contracts:mumbai": "npm run deploy:stable-token:mumbai && npm run deploy:token:mumbai && npm run deploy:pool:mumbai && npm run deploy:yield-vault:mumbai && npm run deploy:vault:mumbai && npm run deploy:twab-delegator:mumbai",
    "deploy:config-contracts:mumbai": "npm run deploy:set-token-price:mumbai && npm run deploy:set-stable-token-role:mumbai && npm run deploy:set-token-role:mumbai && npm run deploy:set-vault-role:mumbai && npm run deploy:set-yield-vault-role:mumbai",
    "----------LINTING----------": "",
    "format": "prettier --config .prettierrc --write \"**/*.{json,md,ts,sol,yml}\"",
    "format:file": "prettier --config .prettierrc --write",
    "gen:local": "ts-node ./script/utils/generateLocalList.ts",
    "gen:testnet": "ts-node ./script/utils/generateTestnetList.ts",
    "hint": "solhint --config \"./.solhint.json\" \"{src,test}/**/*.sol\"",
    "lint-staged": "lint-staged",
    "prepack": "npm run clean && npm run compile",
    "prepare": "husky install",
    "test": "forge test"
  },
  "devDependencies": {
    "husky": "8.0.3",
    "lint-staged": "13.1.0",
    "prettier": "2.8.3",
    "prettier-plugin-solidity": "1.1.1",
    "solhint": "3.3.8",
    "solhint-plugin-prettier": "0.0.5",
    "ts-node": "10.9.1"
  },
  "files": [
    "src/**",
    "out/**"
  ],
  "dependencies": {
    "@types/node": "^20.4.7",
    "typescript": "^5.1.6"
  }
}
